def encontrar_mayor_y_menor(numeros):
    """Encuentra el n칰mero mayor y el n칰mero menor en una lista.

    Args:
        numeros: Una lista de n칰meros.

    Returns:
        Una tupla con el n칰mero mayor y el n칰mero menor, o (None, None) si la lista est치 vac칤a o contiene elementos no num칠ricos.
    """
    if not numeros:
        return None, None  # Manejar el caso de lista vac칤a

    try:
        mayor = max(numeros)
        menor = min(numeros)
        return mayor, menor
    except TypeError:
        return None, None  # Manejar el caso de elementos no num칠ricos

def obtener_lista_numeros():
    """Obtiene una lista de n칰meros del usuario."""
    while True:
        entrada = input("Ingresa una lista de n칰meros separados por espacios (ej. 1 2 3): ")
        if not entrada:
            print("Por favor, ingresa al menos un n칰mero.")
            continue

        try:
            numeros = [float(num) for num in entrada.split()]  # Convertir a n칰meros (float para mayor flexibilidad)
            return numeros
        except ValueError:
            print("Por favor, ingresa n칰meros v치lidos.")

def main():
    """Funci칩n principal que obtiene la lista, encuentra el mayor y el menor, y muestra los resultados."""
    # Obtener la lista de n칰meros del usuario
    numeros = obtener_lista_numeros()

    # Encontrar el mayor y el menor
    mayor, menor = encontrar_mayor_y_menor(numeros)

    # Mostrar los resultados
    if mayor is not None and menor is not None:
        print(f"N칰meros: {numeros}")
        print(f"Mayor: {mayor}")
        print(f"Menor: {menor}")
    else:
        print("No se pudo determinar el mayor y el menor.  Aseg칰rate de ingresar n칰meros v치lidos.")

# Ejecutar la funci칩n principal
if __name__ == "__main__":
    main()

# Funci칩n para encontrar el n칰mero mayor y menor en un arreglo
function encontrarMayorYMenor(numeros) {
  if (!Array.isArray(numeros) || numeros.length === 0) {
    return { mayor: null, menor: null };
  }
  let mayor = numeros[0];
  let menor = numeros[0];
  for (const num of numeros) {
    if (typeof num !== "number" || isNaN(num)) {
      return { mayor: null, menor: null };
    }
    if (num > mayor) mayor = num;
    if (num < menor) menor = num;
  }
  return { mayor, menor };
}

const readline = require('readline').createInterface({
  input: process.stdin,
  output: process.stdout
});

readline.question('Ingresa una lista de n칰meros separados por coma: ', input => {
  const numeros = input.split(',').map(num => parseFloat(num.trim()));
  const { mayor, menor } = encontrarMayorYMenor(numeros);

  if (mayor !== null && menor !== null) {
    console.log(`游댶 Mayor: ${mayor}`);
    console.log(`游댷 Menor: ${menor}`);
  } else {
    console.log("No se pudo determinar el mayor y el menor. Aseg칰rate de ingresar solo n칰meros v치lidos.");
  }
  readline.close();
});